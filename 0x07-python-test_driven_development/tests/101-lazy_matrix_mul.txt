=============================
The ``101-lazy_matrix_mul`` module
=============================

Using ``lazy_matrix_mul``
---------------------

Import the function:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now test it:

correct cases
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

error cases
    >>> lazy_matrix_mul("[]", [[], []])
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[1, 2], [3, 4]], ["a", "b"])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

    >>> lazy_matrix_mul([[], []], "[]")
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul(["c", "b"], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
